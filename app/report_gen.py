# app/report_gen.py
"""
Report generator for Avighna2
Creates PDF forensic reports with summary, findings, and recommendations.
"""

from pathlib import Path
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
import time

ROOT = Path(__file__).resolve().parent.parent
REPORTS_DIR = ROOT / "reports"
REPORTS_DIR.mkdir(exist_ok=True)

def generate_report(case_name: str, findings: str, events: list) -> Path:
    """
    Generate a forensic PDF report.
    case_name: str - name of the case
    findings: str - summary of findings
    events: list  - parsed log events
    """
    timestamp = time.strftime("%Y%m%d-%H%M%S")
    out_path = REPORTS_DIR / f"{case_name.replace(' ', '_')}_{timestamp}.pdf"

    c = canvas.Canvas(str(out_path), pagesize=A4)
    width, height = A4

    # Title
    c.setFont("Helvetica-Bold", 20)
    c.drawCentredString(width/2, height-80, "Avighna2 — Forensic Report")

    # Metadata
    c.setFont("Helvetica", 10)
    c.drawString(50, height-120, f"Case Name: {case_name}")
    c.drawString(50, height-135, f"Generated: {time.strftime('%Y-%m-%d %H:%M:%S')}")

    # Section: Findings
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, height-170, "Summary of Findings:")
    text = c.beginText(60, height-190)
    text.setFont("Helvetica", 11)
    for line in findings.splitlines():
        text.textLine(line)
    c.drawText(text)

    # Section: Recommendations
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, height-300, "Recommendations:")
    text = c.beginText(60, height-320)
    text.setFont("Helvetica", 11)
    text.textLine("1. Block suspicious IP addresses at the firewall.")
    text.textLine("2. Monitor repeated failed login attempts.")
    text.textLine("3. Investigate malware/attack patterns in logs.")
    text.textLine("4. Ensure critical systems have up-to-date patches.")
    c.drawText(text)

    # Footer
    c.setFont("Helvetica-Oblique", 8)
    c.drawCentredString(width/2, 30, "Generated by Avighna2 — Conversational SIEM Assistant")

    c.save()
    return out_path
